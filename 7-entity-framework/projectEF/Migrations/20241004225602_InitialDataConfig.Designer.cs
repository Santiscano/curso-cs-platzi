// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projectEF;

#nullable disable

namespace projectEF.Migrations
{
    [DbContext(typeof(TaskContext))]
    [Migration("20241004225602_InitialDataConfig")]
    partial class InitialDataConfig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("projectEF.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("142b9ff2-d4d9-4e07-aca5-5447e2c6671b"),
                            Description = "Tareas personales",
                            Name = "Personal",
                            Weight = 1
                        },
                        new
                        {
                            CategoryId = new Guid("761a7528-5523-4bc8-9695-bd46e46441b5"),
                            Description = "Tareas de trabajo",
                            Name = "Work",
                            Weight = 2
                        },
                        new
                        {
                            CategoryId = new Guid("cb77479f-3fcb-4097-beed-4c3f30b30974"),
                            Description = "Tareas de estudio",
                            Name = "Study",
                            Weight = 3
                        });
                });

            modelBuilder.Entity("projectEF.Models.Task", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorityTask")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("1f6ddff5-c06b-46ac-bd1b-7838d0842943"),
                            CategoryId = new Guid("142b9ff2-d4d9-4e07-aca5-5447e2c6671b"),
                            DateCreation = new DateTime(2024, 10, 4, 17, 56, 0, 416, DateTimeKind.Local).AddTicks(6690),
                            Description = "Descripcion de tarea 1",
                            PriorityTask = "High",
                            Title = "Tarea 1"
                        },
                        new
                        {
                            TaskId = new Guid("8421b4f1-a1e5-49da-9af2-98fe19b82a22"),
                            CategoryId = new Guid("761a7528-5523-4bc8-9695-bd46e46441b5"),
                            DateCreation = new DateTime(2024, 10, 4, 17, 56, 0, 425, DateTimeKind.Local).AddTicks(2542),
                            Description = "Descripcion de tarea 2",
                            PriorityTask = "Medium",
                            Title = "Tarea 2"
                        },
                        new
                        {
                            TaskId = new Guid("e0b655a4-270f-412e-8c62-f3f3b64fc161"),
                            CategoryId = new Guid("cb77479f-3fcb-4097-beed-4c3f30b30974"),
                            DateCreation = new DateTime(2024, 10, 4, 17, 56, 0, 425, DateTimeKind.Local).AddTicks(2594),
                            Description = "Descripcion de tarea 3",
                            PriorityTask = "Low",
                            Title = "Tarea 3"
                        });
                });

            modelBuilder.Entity("projectEF.Models.Task", b =>
                {
                    b.HasOne("projectEF.Models.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("projectEF.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
