// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projectEF;

#nullable disable

namespace projectEF.Migrations
{
    [DbContext(typeof(TaskContext))]
    [Migration("20241005004105_WithoutWieght")]
    partial class WithoutWieght
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("projectEF.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("01fe5696-becf-48a4-9635-bc1d50fc7780"),
                            Description = "Tareas personales",
                            Name = "Personal"
                        },
                        new
                        {
                            CategoryId = new Guid("50440794-3e32-40e7-91f5-0f41d985554c"),
                            Description = "Tareas de trabajo",
                            Name = "Work"
                        },
                        new
                        {
                            CategoryId = new Guid("67c39bd6-8131-4b31-9b3e-af5446c9b9e4"),
                            Description = "Tareas de estudio",
                            Name = "Study"
                        });
                });

            modelBuilder.Entity("projectEF.Models.Task", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorityTask")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("ea578989-c5ba-4cdf-9406-44299158395d"),
                            CategoryId = new Guid("01fe5696-becf-48a4-9635-bc1d50fc7780"),
                            DateCreation = new DateTime(2024, 10, 4, 19, 41, 3, 870, DateTimeKind.Local).AddTicks(2401),
                            Description = "Descripcion de tarea 1",
                            PriorityTask = "High",
                            Title = "Tarea 1"
                        },
                        new
                        {
                            TaskId = new Guid("4d86bde1-2e26-40d8-afa7-ad63a324e4f4"),
                            CategoryId = new Guid("50440794-3e32-40e7-91f5-0f41d985554c"),
                            DateCreation = new DateTime(2024, 10, 4, 19, 41, 3, 874, DateTimeKind.Local).AddTicks(4524),
                            Description = "Descripcion de tarea 2",
                            PriorityTask = "Medium",
                            Title = "Tarea 2"
                        },
                        new
                        {
                            TaskId = new Guid("7ae3ceee-2696-4a7c-bea2-979d29aeddd1"),
                            CategoryId = new Guid("67c39bd6-8131-4b31-9b3e-af5446c9b9e4"),
                            DateCreation = new DateTime(2024, 10, 4, 19, 41, 3, 874, DateTimeKind.Local).AddTicks(4553),
                            Description = "Descripcion de tarea 3",
                            PriorityTask = "Low",
                            Title = "Tarea 3"
                        });
                });

            modelBuilder.Entity("projectEF.Models.Task", b =>
                {
                    b.HasOne("projectEF.Models.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("projectEF.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
