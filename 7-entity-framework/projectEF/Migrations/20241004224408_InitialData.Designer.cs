// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projectEF;

#nullable disable

namespace projectEF.Migrations
{
    [DbContext(typeof(TaskContext))]
    [Migration("20241004224408_InitialData")]
    partial class InitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("projectEF.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("461c114b-f6d7-4ba5-a778-9bc976ac4d51"),
                            Description = "Tareas personales",
                            Name = "Personal",
                            Weight = 1
                        },
                        new
                        {
                            CategoryId = new Guid("c6c73916-7a34-4208-9d6e-7c4a52c443f5"),
                            Description = "Tareas de trabajo",
                            Name = "Work",
                            Weight = 2
                        },
                        new
                        {
                            CategoryId = new Guid("98385b5e-d1e3-408f-88aa-b3a1bd105d7c"),
                            Description = "Tareas de estudio",
                            Name = "Study",
                            Weight = 3
                        });
                });

            modelBuilder.Entity("projectEF.Models.Task", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriorityTask")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("32e5f6a5-1098-40a3-bc62-9e6d311c375a"),
                            CategoryId = new Guid("461c114b-f6d7-4ba5-a778-9bc976ac4d51"),
                            DateCreation = new DateTime(2024, 10, 4, 17, 44, 5, 974, DateTimeKind.Local).AddTicks(7730),
                            Description = "Descripcion de tarea 1",
                            PriorityTask = "High",
                            Title = "Tarea 1"
                        },
                        new
                        {
                            TaskId = new Guid("fbc35d9d-1cf7-4d1a-bb77-a99143816aa7"),
                            CategoryId = new Guid("c6c73916-7a34-4208-9d6e-7c4a52c443f5"),
                            DateCreation = new DateTime(2024, 10, 4, 17, 44, 5, 984, DateTimeKind.Local).AddTicks(2999),
                            Description = "Descripcion de tarea 2",
                            PriorityTask = "Medium",
                            Title = "Tarea 2"
                        },
                        new
                        {
                            TaskId = new Guid("9877aa69-74b2-41df-ad89-21dd3d1247f1"),
                            CategoryId = new Guid("98385b5e-d1e3-408f-88aa-b3a1bd105d7c"),
                            DateCreation = new DateTime(2024, 10, 4, 17, 44, 5, 984, DateTimeKind.Local).AddTicks(3102),
                            Description = "Descripcion de tarea 3",
                            PriorityTask = "Low",
                            Title = "Tarea 3"
                        });
                });

            modelBuilder.Entity("projectEF.Models.Task", b =>
                {
                    b.HasOne("projectEF.Models.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("projectEF.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
